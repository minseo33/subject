spring:
  thymeleaf:
    # 템플릿 파일 위치 설정 기본값은 templates
    prefix: classpath:templates/thymeleaf/
    # Thymeleaf 템플릿 파일의 확장자를 지정 , 기본값 .html
    suffix: .html
    # 템플릿 캐시는 템플릿 파일을 미리 컴파일하여 성능을 향상시키는데 사용되며, 개발 중에는 주로 캐시를 비활성화하여 변경 사항을 빠르게 반영할 수 있도록 합니다.
    # 프로덕션 환경에서는 캐시를 활성화하는 것이 권장
    cache: false

  # H2 Database 설정
  datasource:
    driver-class-name: org.h2.Driver
    url: 'jdbc:h2:mem:test'   # H2 DB 연결 주소 (In-Memory Mode)
    #url: 'jdbc:h2:~/test'    # H2 DB 연결 주소 (Embedded Mode)
    username: username        # H2 DB 접속 ID (사용자 지정)
    password: password        # H2 DB 접속 PW (사용자 지정)

  # H2 Console 설정
  h2:
    console: # H2 DB를 웹에서 관리할 수 있는 기능
      enabled: true           # H2 Console 사용 여부
      path: /h2-console       # H2 Console 접속 주소

  # JPA 설정
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create        # DB 초기화 전략 (none, create, create-drop, update, validate)
#     none 	테이블 생성 전략을 사용하지 않습니다. 보통 운영 환경에서는 해당 옵션이 권장됩니다.
#     create 	기존 테이블을 삭제한 후 테이블을 재생성합니다.
#     create-drop 	기존 테이블을 삭제한 후 테이블을 재생성하고, 애플리케이션 종료 시점에 테이블을 삭제합니다.
#     update 	기존 테이블 구조는 유지하고, 새로 추가된 컬럼(멤버)만 테이블에 반영합니다. 기존 컬럼(멤버)은 속성이 변경되더라도 테이블에 반영되지 않습니다.
#     validate 	DDL 쿼리를 실행하지 않고, 온전히 엔티티와 테이블이 정상적으로 매핑되었는지만 확인합니다. none과 마찬가지로 운영 환경에서 권장되는 옵션입니다.
    properties:
    
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true      # 쿼리 로그 포맷 (정렬)
        show_sql: true        # 쿼리 로그 출력
# 파라미터 확인을 위한 trace
logging:
  level:
    org.hibernate.type: trace
    
    spring:
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
